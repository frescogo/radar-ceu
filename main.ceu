^["@/pico/pico.ceu"]
^["@/pico/layout.ceu"]
^["fp.ceu"]

val G = @[
    logos   = ["data/fresco-radar.png", "data/fresco-radar.png"],
    players = ["Atleta 1", "Atleta 2"],
]

val VERSION = [6, 0, 0]
val version = VERSION ->
                fp.map(to.string) ->
                fp.intercalate(".") ->
                fp.concat

pico.set.title <-- "FrescoGO - v" ++ version
pico.set.size  <-- [800,450]

val lay = [
    [0,  0,  0,  0,  1,  1,  1,  2,  2,  2,  2],
    [0,  0,  0,  0,  1,  1,  1,  2,  2,  2,  2],
    [0,  0,  0,  0,  1,  1,  1,  2,  2,  2,  2],
    [3,  3,  3,  3,  1,  1,  1,  4,  4,  4,  4],
    [3,  3,  3,  3,  1,  1,  1,  4,  4,  4,  4],
    [5,  5,  5,  5,  6,  6,  6,  7,  7,  7,  7],
    [5,  5,  5,  5,  6,  6,  6,  7,  7,  7,  7],
    [5,  5,  5,  5,  6,  6,  6,  7,  7,  7,  7],
    [8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 10],
    [8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 10],
    [8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 10],
    [8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 10],
    ;;x,  x,  x,  x,  x,  x,  x,  x,  x,
]

val rs = layout-to-rects(lay)
val t = spawn Grid(rs)

spawn {
    par {
        every :Pico.Draw {
            pico.output.draw.image(rs[0].(:Rect).pos, G.logos[0])
            pico.output.draw.image(rs[2].(:Rect).pos, G.logos[1])

            pico.set.font("data/LiberationSans-Bold.ttf", 18)
            pico.output.draw.text(rs[3].(:Rect).pos, G.players[0])
            pico.output.draw.text(rs[4].(:Rect).pos, G.players[1])
        }
    } with {
    }
}


pico.loop()
